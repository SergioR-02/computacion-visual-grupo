import cv2
import numpy as np

def test_camera():
    """Funci√≥n simple para probar la c√°mara"""
    print("üîç Probando c√°mara...")
    
    # Intentar abrir la c√°mara
    cap = cv2.VideoCapture(0)
    
    if not cap.isOpened():
        print("‚ùå No se pudo abrir la c√°mara")
        # Probar otras c√°maras
        for i in range(1, 4):
            cap = cv2.VideoCapture(i)
            if cap.isOpened():
                print(f"‚úÖ C√°mara encontrada en √≠ndice {i}")
                break
        else:
            print("‚ùå No se encontr√≥ ninguna c√°mara")
            return False
    
    print("‚úÖ C√°mara funcionando")
    print("Presiona 'q' para cerrar la prueba")
    
    while True:
        ret, frame = cap.read()
        if not ret:
            print("‚ùå Error leyendo frame")
            break
        
        # Voltear para efecto espejo
        frame = cv2.flip(frame, 1)
        
        # Agregar texto de prueba
        cv2.putText(frame, "Prueba de Camara - Presiona 'q' para salir", 
                   (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
        cv2.putText(frame, "Si ves esto, la camara funciona OK!", 
                   (10, 60), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 255, 0), 2)
        
        cv2.imshow('Prueba de Camara', frame)
        
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    
    cap.release()
    cv2.destroyAllWindows()
    print("‚úÖ Prueba de c√°mara completada")
    return True

def test_dependencies():
    """Probar que todas las dependencias est√©n instaladas"""
    print("üîç Verificando dependencias...")
    
    try:
        import cv2
        print("‚úÖ OpenCV: OK")
    except ImportError:
        print("‚ùå OpenCV: NO INSTALADO")
        return False
    
    try:
        import mediapipe
        print("‚úÖ MediaPipe: OK")
    except ImportError:
        print("‚ùå MediaPipe: NO INSTALADO")
        return False
    
    try:
        import numpy
        print("‚úÖ NumPy: OK")
    except ImportError:
        print("‚ùå NumPy: NO INSTALADO")
        return False
    
    # Dependencias opcionales
    try:
        import speech_recognition
        print("‚úÖ SpeechRecognition: OK (versi√≥n completa disponible)")
    except ImportError:
        print("‚ö†Ô∏è SpeechRecognition: NO INSTALADO (solo versi√≥n simple)")
    
    try:
        import pyaudio
        print("‚úÖ PyAudio: OK (versi√≥n completa disponible)")
    except ImportError:
        print("‚ö†Ô∏è PyAudio: NO INSTALADO (solo versi√≥n simple)")
    
    return True

if __name__ == "__main__":
    print("üß™ Prueba del Sistema de Pintura Interactiva")
    print("=" * 50)
    
    # Probar dependencias
    if not test_dependencies():
        print("\n‚ùå Faltan dependencias cr√≠ticas")
        print("üí° Ejecuta: pip install opencv-python mediapipe numpy")
        exit(1)
    
    print("\n" + "=" * 50)
    
    # Probar c√°mara
    if test_camera():
        print("\n‚úÖ ¬°Todo listo! Puedes ejecutar:")
        print("   - python simple_painting.py (versi√≥n estable)")
        print("   - python main.py (versi√≥n completa con voz)")
    else:
        print("\n‚ùå Problemas con la c√°mara")
        print("üí° Verifica que tengas una c√°mara conectada y funcionando")
